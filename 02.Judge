import java.util.*;

public class Judge02 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String input = scanner.nextLine();

        HashMap<String, LinkedHashMap<String, Integer>> listOfName = new LinkedHashMap<>();
        HashMap<String, Integer> total = new LinkedHashMap<>();

        while (!input.equals("no more time")) {
            String[] inputSplit = input.split(" -> ");
            String name = inputSplit[0];
            String lenguage = inputSplit[1];
            int point = Integer.parseInt(inputSplit[2]);

            listOfName.putIfAbsent(lenguage, new LinkedHashMap<>());
            HashMap<String, Integer> hashListOfName = listOfName.get(lenguage);
            hashListOfName.putIfAbsent(name, 0);

            int point1 = hashListOfName.get(name);
            if (point > point1) {
                hashListOfName.put(name, point);

            } else {
                hashListOfName.put(name, point1);
            }
            input = scanner.nextLine();
        }
        for (Map.Entry<String, LinkedHashMap<String, Integer>> entry : listOfName.entrySet()) {
            HashMap<String, Integer> sss = entry.getValue();
            for (Map.Entry<String, Integer> integerEntry : sss.entrySet()) {
                total.putIfAbsent(integerEntry.getKey(), 0);
                total.put(integerEntry.getKey(), total.get(integerEntry.getKey()) + integerEntry.getValue());
            }
        }
        for (Map.Entry<String, LinkedHashMap<String, Integer>> entry : listOfName.entrySet()) {
        
                    System.out.println(String.format("%s: %d participants",
                            entry.getKey(),
                            entry.getValue().size()));
                    HashMap<String, Integer> valueListOfName = entry.getValue();
                    final int[] count = {0};
                    valueListOfName.entrySet().stream().sorted(Map.Entry.<String, Integer>comparingByValue()
                            .reversed()
                            .thenComparing(Map.Entry.comparingByKey()))
                            .forEach(entry2 -> {

                                System.out.println(String.format("%d. %s <::> %d",
                                        count[0]++ + 1,
                                        entry2.getKey(),
                                        entry2.getValue()));
                            });
                }
        System.out.println("Individual standings:");
        final int[] count = {0};
        total.entrySet().stream().sorted(Map.Entry.<String, Integer>comparingByValue()
                .reversed()
                .thenComparing(Map.Entry.comparingByKey()))
                .forEach(counter -> {
                    System.out.println(String.format("%d. %s -> %d",
                            count[0]++ + 1,
                            counter.getKey(),
                            counter.getValue()));

                });
    }
}
